{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/arham/Desktop/ecommerce-app/frontend/src/screens/ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\n\nconst ProfileScreen = ({\n  location,\n  history\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    success\n  } = userUpdateProfile;\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState(null);\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    } else {\n      if (!user.name) {\n        dispatch(getUserDetails('profile'));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [history, dispatch, user]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage('Password do not match');\n    } else {\n      dispatch(updateUserProfile({\n        id: user._id,\n        name,\n        email,\n        password\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"py-3\",\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 3,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"User Profile \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 23\n      }, this), success && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"success\",\n        children: \"Profile Updated\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            placeholder: \"Enter Name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter Email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Enter Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"confirmPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Enter Confirm Password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 9,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 13\n  }, this);\n};\n\n_s(ProfileScreen, \"B7l+Wgz6DDj2/5SwiqFD6ibRNK8=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = ProfileScreen;\nexport default ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["/home/arham/Desktop/ecommerce-app/frontend/src/screens/ProfileScreen.js"],"names":["React","useState","useEffect","Link","Form","Button","Row","Col","useDispatch","useSelector","Loader","Message","getUserDetails","updateUserProfile","ProfileScreen","location","history","dispatch","userDetails","state","loading","error","user","userLogin","userInfo","userUpdateProfile","success","email","setEmail","name","setName","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","push","submitHandler","e","preventDefault","id","_id","target","value"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport {Form,Button,Row,Col} from 'react-bootstrap'\nimport {useDispatch, useSelector} from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport {getUserDetails,updateUserProfile} from '../actions/userActions'\n\nconst ProfileScreen = ({location,history}) => {\n    const dispatch=useDispatch()\n    const userDetails=useSelector(state=>state.userDetails)\n    const {loading,error,user} = userDetails\n    const userLogin=useSelector(state=>state.userLogin)\n    const {userInfo} = userLogin\n    const userUpdateProfile=useSelector(state=>state.userUpdateProfile)\n    const {success} = userUpdateProfile\n    const [email,setEmail]=useState('')\n    const [name,setName]=useState('')\n    const [password,setPassword]=useState('')\n    const [confirmPassword,setConfirmPassword]=useState('')\n    const [message,setMessage]=useState(null)\n    useEffect(()=>{\n        if(!userInfo){\n            history.push('/login')\n        }\n        else{\n            if(!user.name){\n                dispatch(getUserDetails('profile'))\n            }\n            else{\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    },[history,dispatch,user])\n    const submitHandler=(e)=>{\n        e.preventDefault()\n        if(password!==confirmPassword){\n            setMessage('Password do not match')\n        }\n        else{\n             dispatch(updateUserProfile({id:user._id,name,email,password}))\n        }\n    \n    }\n    return (\n            \n            <Row className='py-3'>\n                <Col md={3}>\n                <h1>User Profile </h1>\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {success && <Message variant='success'>Profile Updated</Message>}\n            {loading && <Loader/>}\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control type='name' placeholder='Enter Name' value={name} onChange={e=>setName(e.target.value)}></Form.Control></Form.Group>\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control type='email' placeholder='Enter Email' value={email} onChange={e=>setEmail(e.target.value)}></Form.Control></Form.Group>\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type='password' placeholder='Enter Password' value={password} onChange={e=>setPassword(e.target.value)}></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='confirmPassword'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control type='password' placeholder='Enter Confirm Password' value={confirmPassword} onChange={e=>setConfirmPassword(e.target.value)}></Form.Control>\n                </Form.Group>\n                <Button type='submit' variant='primary'>\n                    Update\n                </Button>\n            </Form>\n                </Col>\n                <Col md={9}>\n                    <h2>My Orders</h2>\n                </Col>\n            </Row>\n    )\n}\n\nexport default ProfileScreen\n"]},"metadata":{},"sourceType":"module"}