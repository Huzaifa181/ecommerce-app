{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productReducer } from './reducers/productReducer';\nimport { productDetailsReducer } from './reducers/productReducer';\nimport { cartReducer } from './reducers/cartReducer';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer } from './reducers/userReducer';\nimport { createOrderReducer, orderDetailsReducer } from './reducers/orderReducer';\nconst reducer = combineReducers({\n  productList: productReducer,\n  productDetailList: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: createOrderReducer,\n  orderDetails: orderDetailsReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/home/arham/Desktop/ecommerce-app/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productReducer","productDetailsReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","createOrderReducer","orderDetailsReducer","reducer","productList","productDetailList","cart","userLogin","userRegister","userDetails","userUpdateProfile","orderCreate","orderDetails","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAAQA,WAAR,EAAoBC,eAApB,EAAqCC,eAArC,QAA2D,OAA3D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAAQC,cAAR,QAA6B,2BAA7B;AACA,SAAQC,qBAAR,QAAoC,2BAApC;AACA,SAAQC,WAAR,QAA0B,wBAA1B;AACA,SAAQC,gBAAR,EAA0BC,mBAA1B,EAA8CC,kBAA9C,EAAiEC,wBAAjE,QAAgG,wBAAhG;AACA,SAAQC,kBAAR,EAA4BC,mBAA5B,QAAsD,yBAAtD;AAEA,MAAMC,OAAO,GAACb,eAAe,CAAC;AAC1Bc,EAAAA,WAAW,EAACV,cADc;AAE1BW,EAAAA,iBAAiB,EAACV,qBAFQ;AAG1BW,EAAAA,IAAI,EAACV,WAHqB;AAI1BW,EAAAA,SAAS,EAACV,gBAJgB;AAK1BW,EAAAA,YAAY,EAACV,mBALa;AAM1BW,EAAAA,WAAW,EAACV,kBANc;AAO1BW,EAAAA,iBAAiB,EAACV,wBAPQ;AAQ1BW,EAAAA,WAAW,EAACV,kBARc;AAS1BW,EAAAA,YAAY,EAACV;AATa,CAAD,CAA7B;AAYA,MAAMW,oBAAoB,GAACC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAkCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAAlC,GAAgF,EAA3G;AACA,MAAMG,mBAAmB,GAACJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAiCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAjC,GAA8E,IAAxG;AACA,MAAMI,0BAA0B,GAACL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAAwCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAAxC,GAA4F,EAA7H;AAEA,MAAMK,YAAY,GAAC;AACfd,EAAAA,IAAI,EAAC;AACDe,IAAAA,SAAS,EAACR,oBADT;AAEDS,IAAAA,eAAe,EAACH;AAFf,GADU;AAKfZ,EAAAA,SAAS,EAAC;AAACgB,IAAAA,QAAQ,EAACL;AAAV;AALK,CAAnB;AAQA,MAAMM,UAAU,GAAC,CAAChC,KAAD,CAAjB;AAEA,MAAMiC,KAAK,GAACpC,WAAW,CAACc,OAAD,EAASiB,YAAT,EAAsB3B,mBAAmB,CAACF,eAAe,CAAC,GAAGiC,UAAJ,CAAhB,CAAzC,CAAvB;AAEA,eAAeC,KAAf","sourcesContent":["import {createStore,combineReducers, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport {productReducer} from './reducers/productReducer'\nimport {productDetailsReducer} from './reducers/productReducer'\nimport {cartReducer} from './reducers/cartReducer'\nimport {userLoginReducer, userRegisterReducer,userDetailsReducer,userUpdateProfileReducer} from './reducers/userReducer'\nimport {createOrderReducer, orderDetailsReducer} from './reducers/orderReducer'\n\nconst reducer=combineReducers({\n    productList:productReducer,\n    productDetailList:productDetailsReducer,\n    cart:cartReducer,\n    userLogin:userLoginReducer,\n    userRegister:userRegisterReducer,\n    userDetails:userDetailsReducer,\n    userUpdateProfile:userUpdateProfileReducer,\n    orderCreate:createOrderReducer,\n    orderDetails:orderDetailsReducer,\n})\n\nconst cartItemsFromStorage=localStorage.getItem('cartItems')?JSON.parse(localStorage.getItem('cartItems')):[]\nconst userInfoFromStorage=localStorage.getItem('userInfo')?JSON.parse(localStorage.getItem('userInfo')):null\nconst shippingAddressFromStorage=localStorage.getItem('shippingAddress')?JSON.parse(localStorage.getItem('shippingAddress')):{}\n\nconst initialState={\n    cart:{\n        cartItems:cartItemsFromStorage,\n        shippingAddress:shippingAddressFromStorage\n    },\n    userLogin:{userInfo:userInfoFromStorage}\n}\n\nconst middleware=[thunk]\n\nconst store=createStore(reducer,initialState,composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store"]},"metadata":{},"sourceType":"module"}