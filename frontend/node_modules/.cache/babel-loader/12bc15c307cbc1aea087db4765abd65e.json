{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/arham/Desktop/ecommerce-app/frontend/src/screens/PaymentScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Button, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { savePaymentMethod } from '../actions/cartAction';\nimport CheckoutSteps from '../components/CheckoutSteps';\n\nconst PaymentScreen = ({\n  history\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const cart = useSelector(state => state.cart);\n  const {\n    shippingAddress\n  } = cart;\n\n  if (!shippingAddress) {\n    history.push('/shipping');\n  }\n\n  const [paymentMethod, setPaymentMethod] = useState('Paypal');\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(savePaymentMethod(paymentMethod));\n    history.push('/placeorder');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CheckoutSteps, {\n      step1: true,\n      step2: true,\n      step3: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Payment Method\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          as: \"legend\",\n          children: \"Select Method\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            label: \"Paypal or Credit Card\",\n            id: \"PayPal\",\n            name: \"paymentMethod\",\n            value: \"PayPal\",\n            checked: true,\n            onChange: e => setPaymentMethod(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            label: \"Stripe\",\n            id: \"Stripe\",\n            name: \"paymentMethod\",\n            value: \"Stripe\",\n            onChange: e => setPaymentMethod(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PaymentScreen, \"8BT5gacZcwd8BeEO+fdFTU07YDU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PaymentScreen;\nexport default PaymentScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentScreen\");","map":{"version":3,"sources":["/home/arham/Desktop/ecommerce-app/frontend/src/screens/PaymentScreen.js"],"names":["React","useState","Form","Button","Col","useDispatch","useSelector","savePaymentMethod","CheckoutSteps","PaymentScreen","history","dispatch","cart","state","shippingAddress","push","paymentMethod","setPaymentMethod","submitHandler","e","preventDefault","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAAQC,IAAR,EAAaC,MAAb,EAAoBC,GAApB,QAA8B,iBAA9B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,iBAAR,QAAgC,uBAAhC;AACA,OAAOC,aAAP,MAA0B,6BAA1B;;AACA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAAA;;AACjC,QAAMC,QAAQ,GAACN,WAAW,EAA1B;AACA,QAAMO,IAAI,GAACN,WAAW,CAACO,KAAK,IAAEA,KAAK,CAACD,IAAd,CAAtB;AACA,QAAM;AAACE,IAAAA;AAAD,MAAkBF,IAAxB;;AACA,MAAG,CAACE,eAAJ,EAAoB;AAChBJ,IAAAA,OAAO,CAACK,IAAR,CAAa,WAAb;AACH;;AACD,QAAM,CAACC,aAAD,EAAeC,gBAAf,IAAiChB,QAAQ,CAAC,QAAD,CAA/C;;AACA,QAAMiB,aAAa,GAAEC,CAAD,IAAK;AACrBA,IAAAA,CAAC,CAACC,cAAF;AACAT,IAAAA,QAAQ,CAACJ,iBAAiB,CAACS,aAAD,CAAlB,CAAR;AACAN,IAAAA,OAAO,CAACK,IAAR,CAAa,aAAb;AACH,GAJD;;AAKA,sBACI;AAAA,4BACI,QAAC,aAAD;AAAe,MAAA,KAAK,MAApB;AAAqB,MAAA,KAAK,MAA1B;AAA2B,MAAA,KAAK;AAAhC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEG,aAAhB;AAAA,8BACA,QAAC,IAAD,CAAM,KAAN;AAAA,gCACQ,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADR,eAGA,QAAC,GAAD;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,IAAI,EAAC,OAAjB;AAAyB,YAAA,KAAK,EAAC,uBAA/B;AACA,YAAA,EAAE,EAAC,QADH;AACY,YAAA,IAAI,EAAC,eADjB;AACiC,YAAA,KAAK,EAAC,QADvC;AAEA,YAAA,OAAO,MAFP;AAGA,YAAA,QAAQ,EAAEC,CAAC,IAAEF,gBAAgB,CAACE,CAAC,CAACE,MAAF,CAASC,KAAV;AAH7B;AAAA;AAAA;AAAA;AAAA,kBADJ,eAMI,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,IAAI,EAAC,OAAjB;AAAyB,YAAA,KAAK,EAAC,QAA/B;AACA,YAAA,EAAE,EAAC,QADH;AACY,YAAA,IAAI,EAAC,eADjB;AACiC,YAAA,KAAK,EAAC,QADvC;AAEA,YAAA,QAAQ,EAAEH,CAAC,IAAEF,gBAAgB,CAACE,CAAC,CAACE,MAAF,CAASC,KAAV;AAF7B;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAgBI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CAvCD;;GAAMb,a;UACaJ,W,EACJC,W;;;KAFTG,a;AAyCN,eAAeA,aAAf","sourcesContent":["import React,{useState} from 'react'\nimport {Form,Button,Col} from 'react-bootstrap'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {savePaymentMethod} from '../actions/cartAction'\nimport CheckoutSteps from '../components/CheckoutSteps'\nconst PaymentScreen = ({history}) => {\n    const dispatch=useDispatch()\n    const cart=useSelector(state=>state.cart)\n    const {shippingAddress}=cart\n    if(!shippingAddress){\n        history.push('/shipping')\n    }\n    const [paymentMethod,setPaymentMethod]=useState('Paypal')\n    const submitHandler=(e)=>{\n        e.preventDefault();\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('/placeorder')\n    }\n    return (\n        <div>\n            <CheckoutSteps step1 step2 step3></CheckoutSteps>\n            <h1>Payment Method</h1>\n            <Form onSubmit={submitHandler}>\n            <Form.Group>\n                    <Form.Label as='legend'>Select Method</Form.Label>\n            \n            <Col>\n                <Form.Check type='radio' label='Paypal or Credit Card'\n                id='PayPal' name='paymentMethod' value='PayPal'\n                checked\n                onChange={e=>setPaymentMethod(e.target.value)}\n                ></Form.Check>\n                <Form.Check type='radio' label='Stripe'\n                id='Stripe' name='paymentMethod' value='Stripe'\n                onChange={e=>setPaymentMethod(e.target.value)}\n                ></Form.Check>\n            </Col>\n            </Form.Group>\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </div>\n    )\n}\n\nexport default PaymentScreen\n"]},"metadata":{},"sourceType":"module"}