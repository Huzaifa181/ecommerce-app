{"ast":null,"code":"import axios from 'axios';\nimport * as actions from '../constants/userConstants';\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: actions.USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: actions.USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (err) {\n    dispatch({\n      type: actions.USER_LOGIN_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message\n    });\n  }\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: actions.USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users', {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: actions.USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: actions.USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (err) {\n    dispatch({\n      type: actions.USER_REGISTER_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actions.USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: actions.USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: actions.USER_DETAILS_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: actions.USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/profile`, user, config);\n    dispatch({\n      type: actions.USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: actions.USER_UPDATE_PROFILE_FAIL,\n      payload: err.response && err.response.data.message ? err.response.data.message : err.message\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: actions.USER_LOGOUT\n  });\n};","map":{"version":3,"sources":["/home/arham/Desktop/ecommerce-app/frontend/src/actions/userActions.js"],"names":["axios","actions","login","email","password","dispatch","type","USER_LOGIN_REQUEST","config","headers","data","post","USER_LOGIN_SUCCESS","payload","localStorage","setItem","JSON","stringify","err","USER_LOGIN_FAIL","response","message","register","name","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","getUserDetails","id","getState","USER_DETAILS_REQUEST","userLogin","userInfo","Authorization","token","get","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","updateUserProfile","user","USER_UPDATE_PROFILE_REQUEST","put","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","logout","removeItem","USER_LOGOUT"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,4BAAzB;AAEA,OAAO,MAAMC,KAAK,GAAC,CAACC,KAAD,EAAOC,QAAP,KAAkB,MAAMC,QAAN,IAAgB;AACjD,MAAG;AACCA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACL,OAAO,CAACM;AADR,KAAD,CAAR;AAGA,UAAMC,MAAM,GAAC;AACTC,MAAAA,OAAO,EAAC;AACJ,wBAAe;AADX;AADC,KAAb;AAKA,UAAM;AAACC,MAAAA;AAAD,QAAO,MAAMV,KAAK,CAACW,IAAN,CAAW,kBAAX,EAA8B;AAACR,MAAAA,KAAD;AAAOC,MAAAA;AAAP,KAA9B,EAA+CI,MAA/C,CAAnB;AACAH,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACL,OAAO,CAACW,kBADR;AAELC,MAAAA,OAAO,EAACH;AAFH,KAAD,CAAR;AAIAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAgCC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAAhC;AACH,GAfD,CAeC,OAAMQ,GAAN,EAAU;AACPb,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACL,OAAO,CAACkB,eADR;AAELN,MAAAA,OAAO,EAACK,GAAG,CAACE,QAAJ,IAAgBF,GAAG,CAACE,QAAJ,CAAaV,IAAb,CAAkBW,OAAlC,GAA4CH,GAAG,CAACE,QAAJ,CAAaV,IAAb,CAAkBW,OAA9D,GAAsEH,GAAG,CAACG;AAF7E,KAAD,CAAR;AAIH;AACJ,CAtBM;AAwBP,OAAO,MAAMC,QAAQ,GAAC,CAACC,IAAD,EAAOpB,KAAP,EAAaC,QAAb,KAAwB,MAAMC,QAAN,IAAgB;AAC1D,MAAG;AACCA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACL,OAAO,CAACuB;AADR,KAAD,CAAR;AAGA,UAAMhB,MAAM,GAAC;AACTC,MAAAA,OAAO,EAAC;AACJ,wBAAe;AADX;AADC,KAAb;AAKA,UAAM;AAACC,MAAAA;AAAD,QAAO,MAAMV,KAAK,CAACW,IAAN,CAAW,YAAX,EAAwB;AAACY,MAAAA,IAAD;AAAMpB,MAAAA,KAAN;AAAYC,MAAAA;AAAZ,KAAxB,EAA8CI,MAA9C,CAAnB;AACAH,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACL,OAAO,CAACwB,qBADR;AAELZ,MAAAA,OAAO,EAACH;AAFH,KAAD,CAAR;AAIAL,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACL,OAAO,CAACW,kBADR;AAELC,MAAAA,OAAO,EAACH;AAFH,KAAD,CAAR;AAIAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAgCC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAAhC;AACH,GAnBD,CAmBC,OAAMQ,GAAN,EAAU;AACPb,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACL,OAAO,CAACyB,kBADR;AAELb,MAAAA,OAAO,EAACK,GAAG,CAACE,QAAJ,IAAgBF,GAAG,CAACE,QAAJ,CAAaV,IAAb,CAAkBW,OAAlC,GAA4CH,GAAG,CAACE,QAAJ,CAAaV,IAAb,CAAkBW,OAA9D,GAAsEH,GAAG,CAACG;AAF7E,KAAD,CAAR;AAIH;AACJ,CA1BM;AA4BP,OAAO,MAAMM,cAAc,GAAEC,EAAD,IAAM,OAAOvB,QAAP,EAAgBwB,QAAhB,KAA2B;AACzD,MAAG;AACCxB,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACL,OAAO,CAAC6B;AADR,KAAD,CAAR;AAGA,UAAM;AAACC,MAAAA,SAAS,EAAC;AAACC,QAAAA;AAAD;AAAX,QAAuBH,QAAQ,EAArC;AACA,UAAMrB,MAAM,GAAC;AACTC,MAAAA,OAAO,EAAC;AACJ,wBAAe,kBADX;AAEJwB,QAAAA,aAAa,EAAE,UAASD,QAAQ,CAACE,KAAM;AAFnC;AADC,KAAb;AAMA,UAAM;AAACxB,MAAAA;AAAD,QAAO,MAAMV,KAAK,CAACmC,GAAN,CAAW,cAAaP,EAAG,EAA3B,EAA6BpB,MAA7B,CAAnB;AACAH,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACL,OAAO,CAACmC,oBADR;AAELvB,MAAAA,OAAO,EAACH;AAFH,KAAD,CAAR;AAIH,GAhBD,CAgBC,OAAMQ,GAAN,EAAU;AACPb,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACL,OAAO,CAACoC,iBADR;AAELxB,MAAAA,OAAO,EAACK,GAAG,CAACE,QAAJ,IAAgBF,GAAG,CAACE,QAAJ,CAAaV,IAAb,CAAkBW,OAAlC,GAA4CH,GAAG,CAACE,QAAJ,CAAaV,IAAb,CAAkBW,OAA9D,GAAsEH,GAAG,CAACG;AAF7E,KAAD,CAAR;AAIH;AACJ,CAvBM;AAyBP,OAAO,MAAMiB,iBAAiB,GAAEC,IAAD,IAAQ,OAAOlC,QAAP,EAAgBwB,QAAhB,KAA2B;AAC9D,MAAG;AACCxB,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACL,OAAO,CAACuC;AADR,KAAD,CAAR;AAGA,UAAM;AAACT,MAAAA,SAAS,EAAC;AAACC,QAAAA;AAAD;AAAX,QAAuBH,QAAQ,EAArC;AACA,UAAMrB,MAAM,GAAC;AACTC,MAAAA,OAAO,EAAC;AACJ,wBAAe,kBADX;AAEJwB,QAAAA,aAAa,EAAE,UAASD,QAAQ,CAACE,KAAM;AAFnC;AADC,KAAb;AAMA,UAAM;AAACxB,MAAAA;AAAD,QAAO,MAAMV,KAAK,CAACyC,GAAN,CAAW,oBAAX,EAA+BF,IAA/B,EAAoC/B,MAApC,CAAnB;AACAH,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACL,OAAO,CAACyC,2BADR;AAEL7B,MAAAA,OAAO,EAACH;AAFH,KAAD,CAAR;AAIH,GAhBD,CAgBC,OAAMQ,GAAN,EAAU;AACPb,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAACL,OAAO,CAAC0C,wBADR;AAEL9B,MAAAA,OAAO,EAACK,GAAG,CAACE,QAAJ,IAAgBF,GAAG,CAACE,QAAJ,CAAaV,IAAb,CAAkBW,OAAlC,GAA4CH,GAAG,CAACE,QAAJ,CAAaV,IAAb,CAAkBW,OAA9D,GAAsEH,GAAG,CAACG;AAF7E,KAAD,CAAR;AAIH;AACJ,CAvBM;AAyBP,OAAO,MAAMuB,MAAM,GAAC,MAAI,MAAMvC,QAAN,IAAgB;AACpCS,EAAAA,YAAY,CAAC+B,UAAb,CAAwB,UAAxB;AACAxC,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAACL,OAAO,CAAC6C;AAAd,GAAD,CAAR;AACH,CAHM","sourcesContent":["import axios from 'axios'\nimport * as actions from '../constants/userConstants'\n\nexport const login=(email,password)=>async dispatch=>{\n    try{\n        dispatch({\n            type:actions.USER_LOGIN_REQUEST\n        })\n        const config={\n            headers:{\n                'Content-Type':'application/json'\n            }\n        }\n        const {data}=await axios.post('/api/users/login',{email,password},config)\n        dispatch({\n            type:actions.USER_LOGIN_SUCCESS,\n            payload:data\n        })\n        localStorage.setItem('userInfo',JSON.stringify(data))\n    }catch(err){\n        dispatch({\n            type:actions.USER_LOGIN_FAIL,\n            payload:err.response && err.response.data.message ? err.response.data.message:err.message,\n        })\n    }\n}\n\nexport const register=(name, email,password)=>async dispatch=>{\n    try{\n        dispatch({\n            type:actions.USER_REGISTER_REQUEST\n        })\n        const config={\n            headers:{\n                'Content-Type':'application/json'\n            }\n        }\n        const {data}=await axios.post('/api/users',{name,email,password},config)\n        dispatch({\n            type:actions.USER_REGISTER_SUCCESS,\n            payload:data\n        })\n        dispatch({\n            type:actions.USER_LOGIN_SUCCESS,\n            payload:data\n        })\n        localStorage.setItem('userInfo',JSON.stringify(data))\n    }catch(err){\n        dispatch({\n            type:actions.USER_REGISTER_FAIL,\n            payload:err.response && err.response.data.message ? err.response.data.message:err.message,\n        })\n    }\n}\n\nexport const getUserDetails=(id)=>async (dispatch,getState)=>{\n    try{\n        dispatch({\n            type:actions.USER_DETAILS_REQUEST\n        })\n        const {userLogin:{userInfo}}=getState()\n        const config={\n            headers:{\n                'Content-Type':'application/json',\n                Authorization:`Bearer ${userInfo.token}`\n            }\n        }\n        const {data}=await axios.get(`/api/users/${id}`,config)\n        dispatch({\n            type:actions.USER_DETAILS_SUCCESS,\n            payload:data\n        })\n    }catch(err){\n        dispatch({\n            type:actions.USER_DETAILS_FAIL,\n            payload:err.response && err.response.data.message ? err.response.data.message:err.message,\n        })\n    }\n}\n\nexport const updateUserProfile=(user)=>async (dispatch,getState)=>{\n    try{\n        dispatch({\n            type:actions.USER_UPDATE_PROFILE_REQUEST\n        })\n        const {userLogin:{userInfo}}=getState()\n        const config={\n            headers:{\n                'Content-Type':'application/json',\n                Authorization:`Bearer ${userInfo.token}`\n            }\n        }\n        const {data}=await axios.put(`/api/users/profile`,user,config)\n        dispatch({\n            type:actions.USER_UPDATE_PROFILE_SUCCESS,\n            payload:data\n        })\n    }catch(err){\n        dispatch({\n            type:actions.USER_UPDATE_PROFILE_FAIL,\n            payload:err.response && err.response.data.message ? err.response.data.message:err.message,\n        })\n    }\n}\n\nexport const logout=()=>async dispatch=>{\n    localStorage.removeItem('userInfo')\n    dispatch({type:actions.USER_LOGOUT})\n}"]},"metadata":{},"sourceType":"module"}