{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/home/arham/Desktop/ecommerce-app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Form,Button,Col}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import{savePaymentMethod}from'../actions/cartAction';import CheckoutSteps from'../components/CheckoutSteps';var PaymentScreen=function PaymentScreen(_ref){var history=_ref.history;var dispatch=useDispatch();var cart=useSelector(function(state){return state.cart;});var shippingAddress=cart.shippingAddress;if(!shippingAddress){history.push('/shipping');}var _useState=useState('Paypal'),_useState2=_slicedToArray(_useState,2),paymentMethod=_useState2[0],setPaymentMethod=_useState2[1];var submitHandler=function submitHandler(e){e.preventDefault();dispatch(savePaymentMethod(paymentMethod));history.push('/placeorder');};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(CheckoutSteps,{step1:true,step2:true,step3:true}),/*#__PURE__*/_jsx(\"h1\",{children:\"Payment Method\"}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{as:\"legend\",children:\"Select Method\"}),/*#__PURE__*/_jsxs(Col,{children:[/*#__PURE__*/_jsx(Form.Check,{type:\"radio\",label:\"Paypal or Credit Card\",id:\"PayPal\",name:\"paymentMethod\",value:\"PayPal\",checked:true,onChange:function onChange(e){return setPaymentMethod(e.target.value);}}),/*#__PURE__*/_jsx(Form.Check,{type:\"radio\",label:\"Stripe\",id:\"Stripe\",name:\"paymentMethod\",value:\"Stripe\",onChange:function onChange(e){return setPaymentMethod(e.target.value);}})]})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",children:\"Continue\"})]})]});};export default PaymentScreen;","map":{"version":3,"sources":["/home/arham/Desktop/ecommerce-app/frontend/src/screens/PaymentScreen.js"],"names":["React","useState","Form","Button","Col","useDispatch","useSelector","savePaymentMethod","CheckoutSteps","PaymentScreen","history","dispatch","cart","state","shippingAddress","push","paymentMethod","setPaymentMethod","submitHandler","e","preventDefault","target","value"],"mappings":"yPAAA,MAAOA,CAAAA,KAAP,EAAcC,QAAd,KAA6B,OAA7B,CACA,OAAQC,IAAR,CAAaC,MAAb,CAAoBC,GAApB,KAA8B,iBAA9B,CACA,OAAQC,WAAR,CAAqBC,WAArB,KAAuC,aAAvC,CACA,OAAQC,iBAAR,KAAgC,uBAAhC,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAe,IAAbC,CAAAA,OAAa,MAAbA,OAAa,CACjC,GAAMC,CAAAA,QAAQ,CAACN,WAAW,EAA1B,CACA,GAAMO,CAAAA,IAAI,CAACN,WAAW,CAAC,SAAAO,KAAK,QAAEA,CAAAA,KAAK,CAACD,IAAR,EAAN,CAAtB,CAFiC,GAG1BE,CAAAA,eAH0B,CAGTF,IAHS,CAG1BE,eAH0B,CAIjC,GAAG,CAACA,eAAJ,CAAoB,CAChBJ,OAAO,CAACK,IAAR,CAAa,WAAb,EACH,CANgC,cAOMd,QAAQ,CAAC,QAAD,CAPd,wCAO1Be,aAP0B,eAOZC,gBAPY,eAQjC,GAAMC,CAAAA,aAAa,CAAC,QAAdA,CAAAA,aAAc,CAACC,CAAD,CAAK,CACrBA,CAAC,CAACC,cAAF,GACAT,QAAQ,CAACJ,iBAAiB,CAACS,aAAD,CAAlB,CAAR,CACAN,OAAO,CAACK,IAAR,CAAa,aAAb,EACH,CAJD,CAKA,mBACI,oCACI,KAAC,aAAD,EAAe,KAAK,KAApB,CAAqB,KAAK,KAA1B,CAA2B,KAAK,KAAhC,EADJ,cAEI,sCAFJ,cAGI,MAAC,IAAD,EAAM,QAAQ,CAAEG,aAAhB,wBACA,MAAC,IAAD,CAAM,KAAN,yBACQ,KAAC,IAAD,CAAM,KAAN,EAAY,EAAE,CAAC,QAAf,2BADR,cAGA,MAAC,GAAD,yBACI,KAAC,IAAD,CAAM,KAAN,EAAY,IAAI,CAAC,OAAjB,CAAyB,KAAK,CAAC,uBAA/B,CACA,EAAE,CAAC,QADH,CACY,IAAI,CAAC,eADjB,CACiC,KAAK,CAAC,QADvC,CAEA,OAAO,KAFP,CAGA,QAAQ,CAAE,kBAAAC,CAAC,QAAEF,CAAAA,gBAAgB,CAACE,CAAC,CAACE,MAAF,CAASC,KAAV,CAAlB,EAHX,EADJ,cAMI,KAAC,IAAD,CAAM,KAAN,EAAY,IAAI,CAAC,OAAjB,CAAyB,KAAK,CAAC,QAA/B,CACA,EAAE,CAAC,QADH,CACY,IAAI,CAAC,eADjB,CACiC,KAAK,CAAC,QADvC,CAEA,QAAQ,CAAE,kBAAAH,CAAC,QAAEF,CAAAA,gBAAgB,CAACE,CAAC,CAACE,MAAF,CAASC,KAAV,CAAlB,EAFX,EANJ,GAHA,GADA,cAgBI,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAC,SAA9B,sBAhBJ,GAHJ,GADJ,CA0BH,CAvCD,CAyCA,cAAeb,CAAAA,aAAf","sourcesContent":["import React,{useState} from 'react'\nimport {Form,Button,Col} from 'react-bootstrap'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {savePaymentMethod} from '../actions/cartAction'\nimport CheckoutSteps from '../components/CheckoutSteps'\nconst PaymentScreen = ({history}) => {\n    const dispatch=useDispatch()\n    const cart=useSelector(state=>state.cart)\n    const {shippingAddress}=cart\n    if(!shippingAddress){\n        history.push('/shipping')\n    }\n    const [paymentMethod,setPaymentMethod]=useState('Paypal')\n    const submitHandler=(e)=>{\n        e.preventDefault();\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('/placeorder')\n    }\n    return (\n        <div>\n            <CheckoutSteps step1 step2 step3></CheckoutSteps>\n            <h1>Payment Method</h1>\n            <Form onSubmit={submitHandler}>\n            <Form.Group>\n                    <Form.Label as='legend'>Select Method</Form.Label>\n            \n            <Col>\n                <Form.Check type='radio' label='Paypal or Credit Card'\n                id='PayPal' name='paymentMethod' value='PayPal'\n                checked\n                onChange={e=>setPaymentMethod(e.target.value)}\n                ></Form.Check>\n                <Form.Check type='radio' label='Stripe'\n                id='Stripe' name='paymentMethod' value='Stripe'\n                onChange={e=>setPaymentMethod(e.target.value)}\n                ></Form.Check>\n            </Col>\n            </Form.Group>\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </div>\n    )\n}\n\nexport default PaymentScreen\n"]},"metadata":{},"sourceType":"module"}